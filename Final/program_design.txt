これはソフトウェア工学IIの18本の柱をプログラムにして表示するプログラムである。

キーボードの入力によって、表示される柱を変更するものとする。
それは、
A -> AL
B -> AR
C -> CN
D -> DS
E -> GV
F -> HCI
G -> IAS
H -> IM
I -> IS
J -> NC
K -> OS
L -> PBD
M -> PD
N -> PL
O -> SDF
P -> SE
Q -> SF
R -> SP
Z -> クリア
である。
このアプリケーションをMVCモデルを用いて作成するものとする。

このプログラムは以下の手順で作成されるものとする。

1: グラウンドをViewを用いて表示する。  

---------------------------1.0--------------------------

2: キー入力を受け付けることができるのかを確認する。

---------------------------1.1--------------------------

3: グラウンド生成(それに付随するメソッド等)をそれを専任するクラス(Ground)に譲る

4: コントローラの追加先をグラウンドへと変更する。

---------------------------1.2--------------------------

5: 柱(円柱)を作成する(ウィンドウ上に描いてみる) 
円柱 -> 上底、下底ともに楕円を描く。あるいは円をアフィン変換して楕円にするかのどちらか(最終的な手段として、画像を貼り付けること)
-> この最終的な手段を採用することにする。

6: 柱を適当に描いていたのをその情報を束縛するクラスを作成して実装する。
---------------------------1.3--------------------------
7: 柱は円柱・矢印・教科・教員名からなる。
-> これらのクラスを作成し、実装する。
-> これらのクラスをPillarクラスに集約させる
-> また、円柱、教科・教員名を描く四角形のアウトライン専用のクラスも作成する。
-> クラス定数を利用して、アウトラインを描くようにする。
---------------------------1.4--------------------------
8: 今、プログラムが同じ名前空間(パッケージ)に格納されている
-> かなり汚いので、適切な名前空間を作成し、そこに移動させる。
---------------------------1.5--------------------------
9: 現在、教科・教員名が一つだけ描かれている状態である。これを全て描くことができるようにする。
-> 順番に行く。まずは矢印から。
---------------------------1.6--------------------------
10 : 現在、ALだけがウィンドウ上に描かれている。これをとりあえず二つ描いてみる。(ALとAR)
-> 大事なことは、「どんなクラス構造にするか」「どんなメッセージの送信をさせるか」である(これによってプログラムの品質が決まる)
・今考えていること
コントローラからキー入力の値を得る
-> それをViewに送る
-> それをGroundにセットする。
-> そのキーに応じたメソッドを実行する(implement ~.メソッド())
-> グラウンドが新しい記憶領域を持った際に、柱(Computing Curricula)全てが、柱を描くための情報を揃えている必要がある。
-> yの差分(this.y - ?)やheightの差分(this.height - ?)もちゃんと考えなければならない
---------------------------1.7--------------------------
全ての柱を作成する
AL,AR,CN,DS,GV OK
HCI,IAS,IM,IS OK
---------------------------1.8--------------------------
微調整を行う
(いらないフィールドやメソッドなどをなくす)
---------------------------1.9--------------------------
全てをメッセージに変換する
---------------------------2.0--------------------------
